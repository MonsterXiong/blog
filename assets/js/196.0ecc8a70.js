(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{577:function(i,e,v){"use strict";v.r(e);var l=v(26),_=Object(l.a)({},(function(){var i=this,e=i.$createElement,v=i._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[v("h1",{attrs:{id:"什么是-redis"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是-redis"}},[i._v("#")]),i._v(" 什么是 Redis？")]),i._v(" "),v("ul",[v("li",[i._v("Remote Dictionary Server （远程字典服务器）")]),i._v(" "),v("li",[i._v("Redis 是一个开源的使用 C 语言编写的数据库")]),i._v(" "),v("li",[i._v("不同的是 MongoDB 存储的是文档，而 Redis 存储的是键值对（Key-Value）")])]),i._v(" "),v("h2",{attrs:{id:"redis-特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#redis-特点"}},[i._v("#")]),i._v(" Redis 特点")]),i._v(" "),v("ul",[v("li",[v("p",[i._v("速度快")]),i._v(" "),v("ul",[v("li",[i._v("Redis 默认情况下将数据存储在内存中")]),i._v(" "),v("li",[i._v("读取速度能达到 10 万次/s 左右，写入能达到 8 万次/s 左右")])])]),i._v(" "),v("li",[v("p",[i._v("支持数据的持久化")]),i._v(" "),v("ul",[v("li",[i._v("可以将内存中的数据保存到磁盘中")])])]),i._v(" "),v("li",[v("p",[i._v("支持多种数据结构")]),i._v(" "),v("ul",[v("li",[i._v("Redis 是通过 key-value 形式存储数据的，但是 value 的值除了支持常用数据类型以外，同时还提供了 list，set，zset，hash 等数据结构的存储")])])]),i._v(" "),v("li",[v("p",[i._v("定制性强")]),i._v(" "),v("ul",[v("li",[i._v("Redi 虽然强大，但是它是开源免费的")]),i._v(" "),v("li",[i._v("Redis 第一个版本代码在 23000 行代码左右")]),i._v(" "),v("li",[i._v("Redis 当前版本代码在 50000 行左右（代码少，阅读起来比较方便，定制起来就比较简单）")])])]),i._v(" "),v("li",[v("p",[i._v("支持分布式")]),i._v(" "),v("ul",[v("li",[i._v("和 MongoDB 一样，Redis 是支持主从复制，支持分布式存储的")])])])]),i._v(" "),v("h2",{attrs:{id:"redis-常见应用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#redis-常见应用场景"}},[i._v("#")]),i._v(" Redis 常见应用场景")]),i._v(" "),v("ul",[v("li",[i._v("缓存系统\n"),v("ul",[v("li",[i._v("由于 Redis 是将数据存储在内存中，所以我们可以使用 Redis 来实现内存缓存")]),i._v(" "),v("li",[i._v("对于经常会被查询，但是不经常被修改或者删除的数据，存储到 Redis 中")])])]),i._v(" "),v("li",[i._v("排行榜\n"),v("ul",[v("li",[i._v("由于 Redis 支持集合（Set）和有序集合（Sorted Set）,所以我们在实现排行榜的时候变得非常简单")])])]),i._v(" "),v("li",[i._v("计数器\n"),v("ul",[v("li",[i._v("由于 Redis 提供了 incr/decr 指令，使得我们在实现计数器时非常简单")]),i._v(" "),v("li",[i._v("转发数/评论数/播放数/访问数。。。")])])]),i._v(" "),v("li",[i._v("存储社交关系\n"),v("ul",[v("li",[i._v("由于 Redis 支持存储集合类型数据，由于社交关系不会经常发生改变，所以很多社交网站会使用 Redis 来存储社交关系")])])]),i._v(" "),v("li",[i._v("消息队列系统\n"),v("ul",[v("li",[i._v("Redis 天生支持发布订阅模式，所以天生就是实现消息队列系统的材料")])])])]),i._v(" "),v("h2",{attrs:{id:"发布订阅"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#发布订阅"}},[i._v("#")]),i._v(" 发布订阅")]),i._v(" "),v("p",[i._v("在发布订阅中有三个角色：发布者/订阅者/频道，只要发布者将消息发送到对应的频道中，那么所有的订阅者都能收到这个消息，这个就是 Redis 的发布订阅。")]),i._v(" "),v("ul",[v("li",[i._v("订阅\n"),v("ul",[v("li",[i._v("subscribe channel [channel...]")])])]),i._v(" "),v("li",[i._v("发布消息\n"),v("ul",[v("li",[i._v("publish channel message")])])]),i._v(" "),v("li",[i._v("退订频道\n"),v("ul",[v("li",[i._v("unsubscribe [channel [channel ...]]")])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);