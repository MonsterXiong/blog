(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{422:function(t,s,a){"use strict";a.r(s);var e=a(26),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"checkout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checkout"}},[t._v("#")]),t._v(" checkout")]),t._v(" "),a("p",[t._v("检出命令，用于创建、切换分支等。")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到已存在的指定分支")]),t._v("\n$ git checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建并切换到指定的分支，保留所有的提交记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 等同于 "git branch" 和 "git checkout" 两个命令合并')]),t._v("\n$ git checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建并切换到指定的分支，删除所有的提交记录")]),t._v("\n$ git checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("orphan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 替换掉本地的改动，新增的文件和已经添加到暂存区的内容不受影响,撤销工作区误存文件修改")]),t._v("\n$ git checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件路径"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);