(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{514:function(t,a,s){"use strict";s.r(a);var r=s(26),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"es9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es9"}},[t._v("#")]),t._v(" ES9")]),t._v(" "),s("p",[t._v("ES9 新增了 6 条")]),t._v(" "),s("h2",{attrs:{id:"异步迭代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步迭代"}},[t._v("#")]),t._v(" 异步迭代")]),t._v(" "),s("p",[t._v("await 可以和 for...of 循环一起使用，以串行的方式运行异步操作。")]),t._v(" "),s("h2",{attrs:{id:"promise-finally"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-finally"}},[t._v("#")]),t._v(" Promise.finally()")]),t._v(" "),s("h2",{attrs:{id:"rest-spread-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rest-spread-属性"}},[t._v("#")]),t._v(" Rest/Spread 属性")]),t._v(" "),s("h2",{attrs:{id:"正则表达式命名捕获组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式命名捕获组"}},[t._v("#")]),t._v(" 正则表达式命名捕获组")]),t._v(" "),s("h2",{attrs:{id:"正则表达式反向断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式反向断言"}},[t._v("#")]),t._v(" 正则表达式反向断言")]),t._v(" "),s("h2",{attrs:{id:"正则表达式-dotall-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式-dotall-模式"}},[t._v("#")]),t._v(" 正则表达式 dotAll 模式")]),t._v(" "),s("p",[t._v("正则表达式中点.匹配除回车外的任何单字符，标记 s 改变这种行为，允许行终止符的出现")])])}),[],!1,null,null,null);a.default=e.exports}}]);