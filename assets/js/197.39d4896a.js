(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{578:function(t,s,e){"use strict";e.r(s);var a=e(26),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"什么是分布式锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是分布式锁"}},[t._v("#")]),t._v(" 什么是分布式锁？")]),t._v(" "),e("p",[t._v("比如有多个服务端，A、B、C 经过分布式锁对共有资源进行访问，只有 A 可以成功，B 和 C 失败，这种在分布式系统中控制多个进程对共有资源的访问成为分布式锁。")]),t._v(" "),e("h2",{attrs:{id:"分布式锁具有的性质"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁具有的性质"}},[t._v("#")]),t._v(" 分布式锁具有的性质")]),t._v(" "),e("p",[t._v("互斥性：同一时刻，只有一个客户端可以获取锁。")]),t._v(" "),e("p",[t._v("安全性：锁的获取和释放是同一个客户端。")]),t._v(" "),e("p",[t._v("可用性：高可用的分布式锁系统及避免产生死锁")]),t._v(" "),e("h2",{attrs:{id:"怎样用-redis-实现分布式锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎样用-redis-实现分布式锁"}},[t._v("#")]),t._v(" 怎样用 Redis 实现分布式锁？")]),t._v(" "),e("h3",{attrs:{id:"setnx-expire-加锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setnx-expire-加锁"}},[t._v("#")]),t._v(" setnx+expire 加锁")]),t._v(" "),e("p",[t._v("setnx 如果 key 不存在 set 成功返回 1，失败返回 0，保证互斥；")]),t._v(" "),e("p",[t._v("expire 设置过期时间，防止锁的长期持有或死锁。")]),t._v(" "),e("p",[t._v("但这种方式是不正确的，因为 setnx 和 expire 直接会发生异常导致死锁。")]),t._v(" "),e("h3",{attrs:{id:"set-原子方法加锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-原子方法加锁"}},[t._v("#")]),t._v(" set 原子方法加锁")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("SET key value NX EX expire-time\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 直接使用set方法进行加锁，避免死锁。NX和EX为固定值，前者表示SET IF NOT Exist，后者表示添加过期时间，具体时间取最后一个参数")]),t._v("\n")])])]),e("p",[t._v("该方法出现在 Redis2.6.12 以后，可以直接将 set 方法和设置过期时间统一成一个原子操作，避免产生死锁。")]),t._v(" "),e("h3",{attrs:{id:"比较删除解锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#比较删除解锁"}},[t._v("#")]),t._v(" 比较删除解锁")]),t._v(" "),e("p",[t._v("在通过比较删除进行解锁，删除 key 之前，判断是否为加锁的客户端，如果是则删除，如果不是则不删除，保证安全性。")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("DEL key\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除之前判断是否为加锁的客户端，可以通过添加客户端的唯一id（具体实现自己决定）到value中，每次删除前比较，一致再进行删除解锁，保证安全性")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);