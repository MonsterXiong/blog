(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{423:function(t,s,a){"use strict";a.r(s);var r=a(26),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"克隆-clone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#克隆-clone"}},[t._v("#")]),t._v(" 克隆-Clone")]),t._v(" "),a("p",[t._v("从远程仓库克隆一个版本库到本地。")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认在当前目录下创建和版本库名相同的文件夹并下载版本到该文件夹下")]),t._v("\n$ git clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程仓库的网址"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定本地仓库的目录")]),t._v("\n$ git clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程仓库的网址"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("本地目录"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -b 指定要克隆的分支，默认是master分支")]),t._v("\n$ git clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程仓库的网址"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("本地目录"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);