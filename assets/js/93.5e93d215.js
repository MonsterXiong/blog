(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{476:function(e,n,o){"use strict";o.r(n);var a=o(26),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"rollup"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#rollup"}},[e._v("#")]),e._v(" Rollup")]),e._v(" "),o("p",[e._v("前端轮子哥 Rich Harris[63]的作品，我还挺喜欢它的思想。了解到的比较多的用途是用来打包 NodeJS 的库。")]),e._v(" "),o("h2",{attrs:{id:"前言"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),o("p",[e._v("项目中一直用的都是"),o("code",[e._v("webpack")]),e._v("，前一段需要开发几个类库供其他平台使用,本来打算继续用"),o("code",[e._v("webpack")]),e._v("的，但感觉"),o("code",[e._v("webpack")]),e._v("用来开发"),o("code",[e._v("js")]),e._v("库，不仅繁琐而且打包后的文件体积也比较大。正好之前看"),o("code",[e._v("vue")]),e._v("源码，知道"),o("code",[e._v("vue")]),e._v("也是通过"),o("code",[e._v("rollup")]),e._v("打包的。这次又是开发类库的，于是就快速上手了"),o("code",[e._v("rollup")]),e._v("。")]),e._v(" "),o("p",[e._v("本篇文章是我有了一定的项目实践后，回过来给大家分享一下如何从零快速上手"),o("code",[e._v("rollup")]),e._v("。")]),e._v(" "),o("h2",{attrs:{id:"什么是rollup"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#什么是rollup"}},[e._v("#")]),e._v(" 什么是"),o("code",[e._v("rollup")]),e._v("？")]),e._v(" "),o("p",[e._v("系统的了解"),o("code",[e._v("rollup")]),e._v("之前，我们先来简单了解下"),o("code",[e._v("What is rollup？")])]),e._v(" "),o("p",[e._v("关于"),o("code",[e._v("rollup")]),e._v("的介绍，官方文档已经写的很清楚了：")]),e._v(" "),o("blockquote",[o("p",[e._v("Rollup 是一个 JavaScript 模块打包器，可以将小块代码编译成大块复杂的代码，例如 library 或应用程序。")])]),e._v(" "),o("p",[e._v("与"),o("code",[e._v("Webpack")]),e._v("偏向于应用打包的定位不同，"),o("code",[e._v("rollup.js")]),e._v("更专注于"),o("code",[e._v("Javascript")]),e._v("类库打包。")]),e._v(" "),o("p",[e._v("我们熟知的"),o("code",[e._v("Vue")]),e._v("、"),o("code",[e._v("React")]),e._v("等诸多知名框架或类库都是通过"),o("code",[e._v("rollup.js")]),e._v("进行打包的。")]),e._v(" "),o("h2",{attrs:{id:"为什么是rollup"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#为什么是rollup"}},[e._v("#")]),e._v(" 为什么是"),o("code",[e._v("rollup")]),e._v("？")]),e._v(" "),o("p",[o("code",[e._v("webpack")]),e._v("我相信做前端的同学大家都用过，那么为什么有些场景还要使用"),o("code",[e._v("rollup")]),e._v("呢？这里我简单对"),o("code",[e._v("webpack")]),e._v("和"),o("code",[e._v("rollup")]),e._v("做一个比较：")]),e._v(" "),o("p",[e._v("总体来说"),o("code",[e._v("webpack")]),e._v("和"),o("code",[e._v("rollup")]),e._v("在不同场景下，都能发挥自身优势作用。"),o("code",[e._v("webpack")]),e._v("对于代码分割和静态资源导入有着“先天优势”，并且支持热模块替换("),o("code",[e._v("HMR")]),e._v(")，而"),o("code",[e._v("rollup")]),e._v("并不支持。")]),e._v(" "),o("p",[e._v("所以当开发应用时可以优先选择"),o("code",[e._v("webpack")]),e._v("，但是"),o("code",[e._v("rollup")]),e._v("对于代码的"),o("code",[e._v("Tree-shaking")]),e._v("和"),o("code",[e._v("ES6")]),e._v("模块有着算法优势上的支持，若你项目只需要打包出一个简单的"),o("code",[e._v("bundle")]),e._v("包，并是基于"),o("code",[e._v("ES6")]),e._v("模块开发的，可以考虑使用"),o("code",[e._v("rollup")]),e._v("。")]),e._v(" "),o("p",[e._v("其实"),o("code",[e._v("webpack")]),e._v("从"),o("code",[e._v("2.0")]),e._v("开始就已经支持"),o("code",[e._v("Tree-shaking")]),e._v("，并在使用"),o("code",[e._v("babel-loader")]),e._v("的情况下还可以支持"),o("code",[e._v("es6 module")]),e._v("的打包。实际上，"),o("code",[e._v("rollup")]),e._v("已经在渐渐地失去了当初的优势了。但是它并没有被抛弃，反而因其简单的"),o("code",[e._v("API")]),e._v("、使用方式被许多库开发者青睐，如"),o("code",[e._v("React")]),e._v("、"),o("code",[e._v("Vue")]),e._v("等，都是使用"),o("code",[e._v("rollup")]),e._v("作为构建工具的。")]),e._v(" "),o("h2",{attrs:{id:"快速上手"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#快速上手"}},[e._v("#")]),e._v(" 快速上手")]),e._v(" "),o("p",[e._v("我们先花大概十分钟左右的时间来了解下"),o("code",[e._v("rollup")]),e._v("的基本使用以及完成一个"),o("code",[e._v("hello world")]),e._v("。")]),e._v(" "),o("h3",{attrs:{id:"安装"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),o("p",[e._v("首先全局安装"),o("code",[e._v("rollup")]),e._v("：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("npm i rollup -g\n")])])]),o("h3",{attrs:{id:"目录准备-hello-world"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#目录准备-hello-world"}},[e._v("#")]),e._v(" 目录准备（hello world）")]),e._v(" "),o("p",[e._v("接着，我们初始化一个如下所示的项目目录")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("├── dist # 编译结果\n├── example # HTML引用例子\n│   └── index.html\n├── package.json\n└── src # 源码\n    └── index.js\n")])])]),o("p",[e._v("首先我们在"),o("code",[e._v("src/index.js")]),e._v("中写入如下代码：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('console.log("柯森");\n')])])]),o("p",[e._v("然后在命令行执行以下命令：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("rollup src/index.js -f umd -o dist/bundle.js\n")])])]),o("p",[e._v("执行命令，我们即可在"),o("code",[e._v("dist")]),e._v("目录下生成"),o("code",[e._v("bundle.js")]),e._v("文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("(function (factory) {\n typeof define === 'function' && define.amd ? define(factory) :\n factory();\n}((function () { 'use strict';\n\n console.log(\"柯森\");\n\n})));\n")])])]),o("p",[e._v("这时，我们再在"),o("code",[e._v("example/index.html")]),e._v("中引入上面打包生成的"),o("code",[e._v("bundle.js")]),e._v("文件，打开浏览器："),o("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/LNrWl4n5XIJn5eJq5EA4d2aCmWnhJDoNUia4iarcZYWib75no9nfugz2qictWnBORL2zNeFY9UmgsUKWXeiaFuGy8Gw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),e._v("如我们所预料的，控制台输出了"),o("code",[e._v("柯森")]),e._v("。")]),e._v(" "),o("p",[e._v("到这里，我们就用"),o("code",[e._v("rollup")]),e._v("打包了一个最最简单的"),o("code",[e._v("demo")]),e._v("。")]),e._v(" "),o("p",[e._v("可能很多同学看到这里对于上面命令行中的参数不是很明白，我依次说明下：")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("-f")]),e._v("。"),o("code",[e._v("-f")]),e._v("参数是"),o("code",[e._v("--format")]),e._v("的缩写，它表示生成代码的格式，"),o("code",[e._v("amd")]),e._v("表示采用"),o("code",[e._v("AMD")]),e._v("标准，"),o("code",[e._v("cjs")]),e._v("为"),o("code",[e._v("CommonJS")]),e._v("标准，"),o("code",[e._v("esm")]),e._v("（或 es）为"),o("code",[e._v("ES")]),e._v("模块标准。"),o("code",[e._v("-f")]),e._v("的值可以为"),o("code",[e._v("amd")]),e._v("、"),o("code",[e._v("cjs")]),e._v("、"),o("code",[e._v("system")]),e._v("、"),o("code",[e._v("esm")]),e._v("（'es’也可以）、"),o("code",[e._v("iife")]),e._v("或"),o("code",[e._v("umd")]),e._v("中的任何一个。")]),e._v(" "),o("li",[o("code",[e._v("-o")]),e._v("。"),o("code",[e._v("-o")]),e._v("指定了输出的路径，这里我们将打包后的文件输出到"),o("code",[e._v("dist")]),e._v("目录下的"),o("code",[e._v("bundle.js")])])]),e._v(" "),o("p",[e._v("其实除了这两个，还有很多其他常用的命令（这里我暂且列举剩下两个也比较常用的，完整的 rollup 命令行参数）：")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("-c")]),e._v("。指定"),o("code",[e._v("rollup")]),e._v("的配置文件。")]),e._v(" "),o("li",[o("code",[e._v("-w")]),e._v("。监听源文件是否有改动，如果有改动，重新打包。")])]),e._v(" "),o("h3",{attrs:{id:"使用配置文件-rollup-config-js"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#使用配置文件-rollup-config-js"}},[e._v("#")]),e._v(" 使用配置文件("),o("code",[e._v("rollup.config.js")]),e._v(")")]),e._v(" "),o("p",[e._v("使用命令行的方式，如果选项少没什么问题，但是如果添加更多的选项，这种命令行的方式就显得麻烦了。")]),e._v(" "),o("p",[e._v("为此，我们可以创建配置文件来囊括所需的选项")]),e._v(" "),o("p",[e._v("在项目中创建一个名为"),o("code",[e._v("rollup.config.js")]),e._v("的文件，增加如下代码：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('export default {\n  input: ["./src/index.js"],\n  output: {\n    file: "./dist/bundle.js",\n    format: "umd",\n    name: "experience",\n  },\n};\n')])])]),o("p",[e._v("然后命令行执行：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("rollup -c\n")])])]),o("p",[e._v("打开"),o("code",[e._v("dist/bundle.js")]),e._v("文件，我们会发现和上面采用命令行的方式打包出来的结果是一样的。")]),e._v(" "),o("p",[e._v("这里，我对配置文件的选项做下简单的说明：")]),e._v(" "),o("ul",[o("li",[o("p",[o("code",[e._v("input")]),e._v("表示入口文件的路径（老版本为 entry，已经废弃）")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("output")]),e._v("表示输出文件的内容，它允许传入一个对象或一个数组，当为数组时，依次输出多个文件，它包含以下内容：")])]),e._v(" "),o("li",[o("ul",[o("li",[o("code",[e._v("output.file")]),e._v("：输出文件的路径（老版本为 dest，已经废弃）")]),e._v(" "),o("li",[o("code",[e._v("output.format")]),e._v("：输出文件的格式")]),e._v(" "),o("li",[o("code",[e._v("output.banner")]),e._v("：文件头部添加的内容")]),e._v(" "),o("li",[o("code",[e._v("output.footer")]),e._v("：文件末尾添加的内容")])])])]),e._v(" "),o("p",[e._v("到这里，相信你已经差不多上手"),o("code",[e._v("rollup")]),e._v("了。")]),e._v(" "),o("h2",{attrs:{id:"进阶"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#进阶"}},[e._v("#")]),e._v(" 进阶")]),e._v(" "),o("p",[e._v("但是，这对于真实的业务场景是远远不够的。")]),e._v(" "),o("p",[e._v("下面，我将介绍"),o("code",[e._v("rollup")]),e._v("中的几种常用的插件以及"),o("code",[e._v("external")]),e._v("属性、"),o("code",[e._v("tree-shaking")]),e._v("机制。")]),e._v(" "),o("h3",{attrs:{id:"resolve插件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#resolve插件"}},[e._v("#")]),e._v(" "),o("code",[e._v("resolve")]),e._v("插件")]),e._v(" "),o("h4",{attrs:{id:"为什么要使用resolve插件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用resolve插件"}},[e._v("#")]),e._v(" 为什么要使用"),o("code",[e._v("resolve")]),e._v("插件")]),e._v(" "),o("p",[e._v("在上面的入门案例中，我们打包的对象是本地的"),o("code",[e._v("js")]),e._v("代码和库，但实际开发中，不太可能所有的库都位于本地，我们大多会通过"),o("code",[e._v("npm")]),e._v("下载远程的库。")]),e._v(" "),o("p",[e._v("与"),o("code",[e._v("webpack")]),e._v("和"),o("code",[e._v("browserify")]),e._v("这样的其他捆绑包不同，"),o("code",[e._v("rollup")]),e._v("不知道如何打破常规去处理这些依赖。因此我们需要添加一些配置。")]),e._v(" "),o("h4",{attrs:{id:"resolve插件使用"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#resolve插件使用"}},[e._v("#")]),e._v(" "),o("code",[e._v("resolve")]),e._v("插件使用")]),e._v(" "),o("p",[e._v("首先在我们的项目中添加一个依赖"),o("code",[e._v("the-answer")]),e._v("，然后修改"),o("code",[e._v("src/index.js")]),e._v("文件:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('import answer from "the-answer";\n\nexport default function () {\n  console.log("the answer is " + answer);\n}\n')])])]),o("p",[e._v("执行"),o("code",[e._v("npm run build")]),e._v("。")]),e._v(" "),o("blockquote",[o("p",[e._v("这里为了方便，我将原本的"),o("code",[e._v("rollup -c -w")]),e._v("添加到了"),o("code",[e._v("package.json")]),e._v("的"),o("code",[e._v("scripts")]),e._v("中："),o("code",[e._v('"build": "rollup -c -w"')])])]),e._v(" "),o("p",[e._v("会得到以下报错："),o("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/LNrWl4n5XIJn5eJq5EA4d2aCmWnhJDoNmhBrkGA2zibekrVjvaD3eLPCM0mBeTJTcMnN33F3zPsiaIYf5hMVxPKA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),e._v("打包后的"),o("code",[e._v("bundle.js")]),e._v("仍然会在"),o("code",[e._v("Node.js")]),e._v("中工作，但是"),o("code",[e._v("the-answer")]),e._v("不包含在包中。为了解决这个问题，将我们编写的源码与依赖的第三方库进行合并，"),o("code",[e._v("rollup.js")]),e._v("为我们提供了"),o("code",[e._v("resolve")]),e._v("插件。")]),e._v(" "),o("p",[e._v("首先，安装"),o("code",[e._v("resolve")]),e._v("插件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("npm i -D @rollup/plugin-node-resolve\n")])])]),o("p",[e._v("修改配置文件"),o("code",[e._v("rollup.config.js")]),e._v("：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('import resolve from "@rollup/plugin-node-resolve";\n\nexport default {\n  input: ["./src/index.js"],\n  output: {\n    file: "./dist/bundle.js",\n    format: "umd",\n    name: "experience",\n  },\n  plugins: [resolve()],\n};\n')])])]),o("p",[e._v("这时再次执行"),o("code",[e._v("npm run build")]),e._v("，可以发现报错已经没有了："),o("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/LNrWl4n5XIJn5eJq5EA4d2aCmWnhJDoNia0T7mxUEoBtrNazuMAjMznfhbu9OxDESuZosrIia0G1ePvZwAyoGtNQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),e._v(" "),o("p",[e._v("打开"),o("code",[e._v("dist/bundle.js")]),e._v("文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.experience = factory());\n}(this, (function () { 'use strict';\n\n  var index = 42;\n\n  function index$1 () {\n    console.log(\"the answer is \" + index);\n  }\n\n  return index$1;\n\n})));\n")])])]),o("p",[e._v("打包文件"),o("code",[e._v("bundle.js")]),e._v("中已经包含了引用的模块。")]),e._v(" "),o("p",[e._v("有些场景下，虽然我们使用了"),o("code",[e._v("resolve")]),e._v("插件，但可能我们仍然想要某些库保持外部引用状态，这时我们就需要使用"),o("code",[e._v("external")]),e._v("属性，来告诉"),o("code",[e._v("rollup.js")]),e._v("哪些是外部的类库。")]),e._v(" "),o("h3",{attrs:{id:"external-属性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#external-属性"}},[e._v("#")]),e._v(" external 属性")]),e._v(" "),o("p",[e._v("修改"),o("code",[e._v("rollup.js")]),e._v("的配置文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('import resolve from "@rollup/plugin-node-resolve";\n\nexport default {\n  input: ["./src/index.js"],\n  output: {\n    file: "./dist/bundle.js",\n    format: "umd",\n    name: "experience",\n  },\n  plugins: [resolve()],\n  external: ["the-answer"],\n};\n')])])]),o("p",[e._v("重新打包，打开"),o("code",[e._v("dist/bundle.js")]),e._v("文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('the-answer')) :\n  typeof define === 'function' && define.amd ? define(['the-answer'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.experience = factory(global.answer));\n}(this, (function (answer) { 'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  var answer__default = /*#__PURE__*/_interopDefaultLegacy(answer);\n\n  function index () {\n    console.log(\"the answer is \" + answer__default['default']);\n  }\n\n  return index;\n\n})));\n")])])]),o("p",[e._v("这时我们看到"),o("code",[e._v("the-answer")]),e._v("已经是做为外部库被引入了。")]),e._v(" "),o("h3",{attrs:{id:"commonjs插件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#commonjs插件"}},[e._v("#")]),e._v(" "),o("code",[e._v("commonjs")]),e._v("插件")]),e._v(" "),o("h4",{attrs:{id:"为什么需要commonjs插件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要commonjs插件"}},[e._v("#")]),e._v(" 为什么需要"),o("code",[e._v("commonjs")]),e._v("插件")]),e._v(" "),o("p",[o("code",[e._v("rollup.js")]),e._v("编译源码中的模块引用默认只支持 "),o("code",[e._v("ES6+")]),e._v("的模块方式"),o("code",[e._v("import/export")]),e._v("。然而大量的"),o("code",[e._v("npm")]),e._v("模块是基于"),o("code",[e._v("CommonJS")]),e._v("模块方式，这就导致了大量 "),o("code",[e._v("npm")]),e._v("模块不能直接编译使用。")]),e._v(" "),o("p",[e._v("因此使得"),o("code",[e._v("rollup.js")]),e._v("编译支持"),o("code",[e._v("npm")]),e._v("模块和"),o("code",[e._v("CommonJS")]),e._v("模块方式的插件就应运而生："),o("code",[e._v("@rollup/plugin-commonjs")]),e._v("。")]),e._v(" "),o("h4",{attrs:{id:"commonjs插件使用"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#commonjs插件使用"}},[e._v("#")]),e._v(" "),o("code",[e._v("commonjs")]),e._v("插件使用")]),e._v(" "),o("p",[e._v("首先，安装该模块：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("npm i -D @rollup/plugin-commonjs\n")])])]),o("p",[e._v("然后修改"),o("code",[e._v("rollup.config.js")]),e._v("文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('import resolve from "@rollup/plugin-node-resolve";\nimport commonjs from "@rollup/plugin-commonjs";\nexport default {\n  input: ["./src/index.js"],\n  output: {\n    file: "./dist/bundle.js",\n    format: "umd",\n    name: "experience",\n  },\n  plugins: [resolve(), commonjs()],\n  external: ["the-answer"],\n};\n')])])]),o("h3",{attrs:{id:"babel插件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#babel插件"}},[e._v("#")]),e._v(" "),o("code",[e._v("babel")]),e._v("插件")]),e._v(" "),o("h4",{attrs:{id:"为什么需要babel插件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要babel插件"}},[e._v("#")]),e._v(" 为什么需要"),o("code",[e._v("babel")]),e._v("插件？")]),e._v(" "),o("p",[e._v("我们在"),o("code",[e._v("src")]),e._v("目录下添加"),o("code",[e._v("es6.js")]),e._v("文件(⚠️ 这里我们使用了 es6 中的箭头函数)：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("const a = 1;\nconst b = 2;\nconsole.log(a, b);\nexport default () => {\n  return a + b;\n};\n")])])]),o("p",[e._v("然后修改"),o("code",[e._v("rollup.config.js")]),e._v("配置文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('import resolve from "@rollup/plugin-node-resolve";\nimport commonjs from "@rollup/plugin-commonjs";\nexport default {\n  input: ["./src/es6.js"],\n  output: {\n    file: "./dist/esBundle.js",\n    format: "umd",\n    name: "experience",\n  },\n  plugins: [resolve(), commonjs()],\n  external: ["the-answer"],\n};\n')])])]),o("p",[e._v("执行打包，可以看到"),o("code",[e._v("dist/esBundle.js")]),e._v("文件内容如下：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.experience = factory());\n}(this, (function () { 'use strict';\n\n  const a = 1;\n  const b = 2;\n  console.log(a, b);\n  var es6 = () => {\n    return a + b;\n  };\n\n  return es6;\n\n})));\n")])])]),o("p",[e._v("可以看到箭头函数被保留下来，这样的代码在不支持"),o("code",[e._v("ES6")]),e._v("的环境下将无法运行。我们期望在"),o("code",[e._v("rollup.js")]),e._v("打包的过程中就能使用"),o("code",[e._v("babel")]),e._v("完成代码转换，因此我们需要"),o("code",[e._v("babel")]),e._v("插件。")]),e._v(" "),o("h4",{attrs:{id:"babel插件的使用"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#babel插件的使用"}},[e._v("#")]),e._v(" "),o("code",[e._v("babel")]),e._v("插件的使用")]),e._v(" "),o("p",[e._v("首先，安装：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("npm i -D @rollup/plugin-babel\n")])])]),o("p",[e._v("同样修改配置文件"),o("code",[e._v("rollup.config.js")]),e._v("：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('import resolve from "@rollup/plugin-node-resolve";\nimport commonjs from "@rollup/plugin-commonjs";\nimport babel from "@rollup/plugin-babel";\n\nexport default {\n  input: ["./src/es6.js"],\n  output: {\n    file: "./dist/esBundle.js",\n    format: "umd",\n    name: "experience",\n  },\n  plugins: [resolve(), commonjs(), babel()],\n  external: ["the-answer"],\n};\n')])])]),o("p",[e._v("然后打包，发现会出现报错："),o("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/LNrWl4n5XIJn5eJq5EA4d2aCmWnhJDoNunzhsX5ZApOQOx6vicKyEo7NpW3QF4XrYUibcSqk4BsbBGd2VwxkzPicA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),e._v("提示我们缺少"),o("code",[e._v("@babel/core")]),e._v("，因为"),o("code",[e._v("@babel/core")]),e._v("是"),o("code",[e._v("babel")]),e._v("的核心。我们来进行安装：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("npm i @babel/core\n")])])]),o("p",[e._v("再次执行打包，发现这次没有报错了，但是我们尝试打开"),o("code",[e._v("dist/esBundle.js")]),e._v("：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.experience = factory());\n}(this, (function () { 'use strict';\n\n  const a = 1;\n  const b = 2;\n  console.log(a, b);\n  var es6 = (() => {\n    return a + b;\n  });\n\n  return es6;\n\n})));\n")])])]),o("p",[e._v("可以发现箭头函数仍然存在，显然这是不正确的，说明我们的"),o("code",[e._v("babel")]),e._v("插件没有起到作用。这是为什么呢？")]),e._v(" "),o("p",[e._v("原因是由于我们缺少"),o("code",[e._v(".babelrc")]),e._v("文件，添加该文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('{\n  "presets": [\n    [\n      "@babel/preset-env",\n      {\n        "modules": false,\n        // "useBuiltIns": "usage"\n      }\n    ]\n  ]\n}\n')])])]),o("p",[e._v("我们看"),o("code",[e._v(".babelrc")]),e._v("配置了"),o("code",[e._v("preset env")]),e._v("，所以先安装这个插件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("npm i @babel/preset-env\n")])])]),o("p",[e._v("这次再次执行打包，我们打开"),o("code",[e._v("dist/esBundle.js")]),e._v("文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.experience = factory());\n}(this, (function () { 'use strict';\n\n  var a = 1;\n  var b = 2;\n  console.log(a, b);\n  var es6 = (function () {\n    return a + b;\n  });\n\n  return es6;\n\n})));\n")])])]),o("p",[e._v("可以看到箭头函数被转换为了"),o("code",[e._v("function")]),e._v("，说明"),o("code",[e._v("babel")]),e._v("插件正常工作。")]),e._v(" "),o("h3",{attrs:{id:"json插件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#json插件"}},[e._v("#")]),e._v(" "),o("code",[e._v("json")]),e._v("插件")]),e._v(" "),o("h4",{attrs:{id:"为什么要使用json插件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用json插件"}},[e._v("#")]),e._v(" 为什么要使用"),o("code",[e._v("json")]),e._v("插件？")]),e._v(" "),o("p",[e._v("在"),o("code",[e._v("src")]),e._v("目录下创建"),o("code",[e._v("json.js")]),e._v("文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('import json from "../package.json";\nconsole.log(json.author);\n')])])]),o("p",[e._v("内容很简单，就是引入"),o("code",[e._v("package.json")]),e._v("，然后去打印"),o("code",[e._v("author")]),e._v("字段。")]),e._v(" "),o("p",[e._v("修改"),o("code",[e._v("rollup.config.js")]),e._v("配置文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('import resolve from "@rollup/plugin-node-resolve";\nimport commonjs from "@rollup/plugin-commonjs";\nimport babel from "@rollup/plugin-babel";\n\nexport default {\n  input: ["./src/json.js"],\n  output: {\n    file: "./dist/jsonBundle.js",\n    format: "umd",\n    name: "experience",\n  },\n  plugins: [resolve(), commonjs(), babel()],\n  external: ["the-answer"],\n};\n')])])]),o("p",[e._v("执行打包，发现会发生如下报错："),o("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/LNrWl4n5XIJn5eJq5EA4d2aCmWnhJDoNE2dVDDsIfSoPicflJiaJOd8FbnLhhxmukqPZTXask7y7sNhyOd2GhvDQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),e._v("提示我们缺少"),o("code",[e._v("@rollup/plugin-json")]),e._v("插件来支持"),o("code",[e._v("json")]),e._v("文件。")]),e._v(" "),o("h4",{attrs:{id:"json插件的使用"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#json插件的使用"}},[e._v("#")]),e._v(" "),o("code",[e._v("json")]),e._v("插件的使用")]),e._v(" "),o("p",[e._v("来安装该插件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("npm i -D @rollup/plugin-json\n")])])]),o("p",[e._v("同样修改下配置文件，将插件加入"),o("code",[e._v("plugins")]),e._v("数组即可。")]),e._v(" "),o("p",[e._v("然后再次打包，发现打包成功了，我们打开生成的"),o("code",[e._v("dist/jsonBundle")]),e._v("目录：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('(function (factory) {\n  typeof define === \'function\' && define.amd ? define(factory) :\n  factory();\n}((function () { \'use strict\';\n\n  var name = "rollup-experience";\n  var version = "1.0.0";\n  var description = "";\n  var main = "index.js";\n  var directories = {\n   example: "example"\n  };\n  var scripts = {\n   build: "rollup -c -w",\n   test: "echo \\"Error: no test specified\\" && exit 1"\n  };\n  var author = "Cosen";\n  var license = "ISC";\n  var dependencies = {\n   "@babel/core": "^7.11.6",\n   "@babel/preset-env": "^7.11.5",\n   "the-answer": "^1.0.0"\n  };\n  var devDependencies = {\n   "@rollup/plugin-babel": "^5.2.0",\n   "@rollup/plugin-commonjs": "^15.0.0",\n   "@rollup/plugin-json": "^4.1.0",\n   "@rollup/plugin-node-resolve": "^9.0.0"\n  };\n  var json = {\n   name: name,\n   version: version,\n   description: description,\n   main: main,\n   directories: directories,\n   scripts: scripts,\n   author: author,\n   license: license,\n   dependencies: dependencies,\n   devDependencies: devDependencies\n  };\n\n  console.log(json.author);\n\n})));\n')])])]),o("p",[e._v("完美！！")]),e._v(" "),o("h3",{attrs:{id:"tree-shaking机制"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking机制"}},[e._v("#")]),e._v(" "),o("code",[e._v("tree-shaking")]),e._v("机制")]),e._v(" "),o("p",[e._v("这里我们以最开始的"),o("code",[e._v("src/index.js")]),e._v("为例进行说明：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('import answer from "the-answer";\n\nexport default function () {\n  console.log("the answer is " + answer);\n}\n')])])]),o("p",[e._v("修改上述文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("const a = 1;\nconst b = 2;\nexport default function () {\n  console.log(a + b);\n}\n")])])]),o("p",[e._v("执行打包。打开"),o("code",[e._v("dist/bundle.js")]),e._v("文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.experience = factory());\n}(this, (function () { 'use strict';\n\n  var a = 1;\n  var b = 2;\n  function index () {\n    console.log(a + b);\n  }\n\n  return index;\n\n})));\n")])])]),o("p",[e._v("再次修改"),o("code",[e._v("src/index.js")]),e._v("文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("const a = 1;\nconst b = 2;\nexport default function () {\n  console.log(a);\n}\n")])])]),o("p",[e._v("再次执行打包，打开打包文件：")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.experience = factory());\n}(this, (function () { 'use strict';\n\n  var a = 1;\n  function index () {\n    console.log(a);\n  }\n\n  return index;\n\n})));\n")])])]),o("p",[e._v("发现了什么？")]),e._v(" "),o("p",[e._v("我们发现关于变量"),o("code",[e._v("b")]),e._v("的定义没有了，因为源码中并没有用到这个变量。这就是"),o("code",[e._v("ES")]),e._v("模块著名的"),o("code",[e._v("tree-shaking")]),e._v("机制，它动态地清除没有被使用过的代码，使得代码更加精简，从而可以使得我们的类库获得更快的加载速度。")]),e._v(" "),o("h2",{attrs:{id:"总结"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),o("p",[e._v("本文大致向大家介绍了什么是"),o("code",[e._v("rollup")]),e._v("以及如何快速上手"),o("code",[e._v("rollup")]),e._v("。文中提到的这些其实只是冰山一角，"),o("code",[e._v("rollup")]),e._v("能玩的东西还有很多，关于更多可以去 rollup 官网查询")])])}),[],!1,null,null,null);n.default=s.exports}}]);