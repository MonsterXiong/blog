(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{484:function(a,t,r){"use strict";r.r(t);var s=r(26),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[a._v("#")]),a._v(" 数组")]),a._v(" "),r("h2",{attrs:{id:"数组常用的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组常用的方法"}},[a._v("#")]),a._v(" 数组常用的方法")]),a._v(" "),r("h3",{attrs:{id:"增"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#增"}},[a._v("#")]),a._v(" 增")]),a._v(" "),r("ul",[r("li",[a._v("push()")]),a._v(" "),r("li",[a._v("unshift()")]),a._v(" "),r("li",[a._v("splice()")]),a._v(" "),r("li",[a._v("concat()")])]),a._v(" "),r("h3",{attrs:{id:"删"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#删"}},[a._v("#")]),a._v(" 删")]),a._v(" "),r("ul",[r("li",[a._v("pop()")]),a._v(" "),r("li",[a._v("shift()")]),a._v(" "),r("li",[a._v("splice()")]),a._v(" "),r("li",[a._v("slice()")])]),a._v(" "),r("h3",{attrs:{id:"改"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#改"}},[a._v("#")]),a._v(" 改")]),a._v(" "),r("ul",[r("li",[a._v("splice()")])]),a._v(" "),r("h3",{attrs:{id:"查"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查"}},[a._v("#")]),a._v(" 查")]),a._v(" "),r("p",[a._v("查找元素，返回元素坐标或者元素值")]),a._v(" "),r("ul",[r("li",[a._v("indexOf()")]),a._v(" "),r("li",[a._v("includes()")]),a._v(" "),r("li",[a._v("find()")])]),a._v(" "),r("h3",{attrs:{id:"indexof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[a._v("#")]),a._v(" indexOf")]),a._v(" "),r("p",[a._v("返回要查找的元素在数组中的位置，如果没找到则返回-1")]),a._v(" "),r("h3",{attrs:{id:"includes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[a._v("#")]),a._v(" includes")]),a._v(" "),r("p",[a._v("返回要查找的元素在数组中的位置，找到返回 true,否则 false")]),a._v(" "),r("h3",{attrs:{id:"find"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[a._v("#")]),a._v(" find")]),a._v(" "),r("p",[a._v("返回第一个匹配的元素。参数是(item,index,array)")]),a._v(" "),r("h2",{attrs:{id:"排序方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#排序方法"}},[a._v("#")]),a._v(" 排序方法")]),a._v(" "),r("ul",[r("li",[a._v("reverse()")]),a._v(" "),r("li",[a._v("sort()")])]),a._v(" "),r("h3",{attrs:{id:"reverse"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[a._v("#")]),a._v(" reverse")]),a._v(" "),r("p",[a._v("将数组反向排列")]),a._v(" "),r("h3",{attrs:{id:"sort"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[a._v("#")]),a._v(" sort")]),a._v(" "),r("p",[a._v("接受一个比较函数，用于判断哪个值应该在前面")]),a._v(" "),r("h2",{attrs:{id:"转换方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#转换方法"}},[a._v("#")]),a._v(" 转换方法")]),a._v(" "),r("ul",[r("li",[a._v("join()")])]),a._v(" "),r("h3",{attrs:{id:"join"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[a._v("#")]),a._v(" join")]),a._v(" "),r("p",[a._v("接收一个参数，字符串分隔符，返回包含所有项的字符串。")]),a._v(" "),r("h2",{attrs:{id:"迭代方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#迭代方法"}},[a._v("#")]),a._v(" 迭代方法")]),a._v(" "),r("p",[a._v("迭代数组的方法（不改变原数组），参数都为一个函数，数组的每一项都会运行该函数，函数的参数是 (item,index,array)。")]),a._v(" "),r("ul",[r("li",[a._v("some()")]),a._v(" "),r("li",[a._v("every()")]),a._v(" "),r("li",[a._v("forEach()")]),a._v(" "),r("li",[a._v("filter()")]),a._v(" "),r("li",[a._v("map()")])]),a._v(" "),r("h3",{attrs:{id:"some"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#some"}},[a._v("#")]),a._v(" some")]),a._v(" "),r("p",[a._v("如果有一项函数返回 true，则这个方法返回 true")]),a._v(" "),r("h3",{attrs:{id:"every"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#every"}},[a._v("#")]),a._v(" every")]),a._v(" "),r("p",[a._v("如果对每一项函数都返回 true，则这个方法返回 true")]),a._v(" "),r("h3",{attrs:{id:"foreach"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#foreach"}},[a._v("#")]),a._v(" forEach")]),a._v(" "),r("p",[a._v("没有返回值")]),a._v(" "),r("h3",{attrs:{id:"filter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[a._v("#")]),a._v(" filter")]),a._v(" "),r("p",[a._v("函数返回 true 的项会组成数组之后返回。")]),a._v(" "),r("h3",{attrs:{id:"map"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[a._v("#")]),a._v(" map")]),a._v(" "),r("p",[a._v("返回由每次函数调用的结果构成的数组")])])}),[],!1,null,null,null);t.default=v.exports}}]);