(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{421:function(t,a,s){"use strict";s.r(a);var n=s(26),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"分支-branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支-branch"}},[t._v("#")]),t._v(" 分支-Branch")]),t._v(" "),s("p",[t._v("操作 Git 的分支命令。")]),t._v(" "),s("div",{staticClass:"language-ruby extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 列出本地的所有分支，当前所在分支以 "*" 标出')]),t._v("\n$ git branch\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 列出本地的所有分支并显示最后一次提交，当前所在分支以 "*" 标出')]),t._v("\n$ git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建新分支，新的分支基于上一次提交建立")]),t._v("\n$ git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改分支名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不指定原分支名称则为当前所在分支")]),t._v("\n$ git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("原分支名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("新的分支名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制修改分支名称")]),t._v("\n$ git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("M")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("原分支名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("新的分支名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看本地分支")]),t._v("\n$ git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除指定的本地分支")]),t._v("\n$ git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制删除指定的本地分支")]),t._v("\n$ git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);